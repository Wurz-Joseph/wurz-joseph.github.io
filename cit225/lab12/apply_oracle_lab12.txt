SQL> --STEP 1
SQL> 
SQL> 
SQL> 
SQL> CREATE TABLE calendar 
  2  ( calendar_id           NUMBER         
  3  , calendar_name         VARCHAR2(10)   constraint nn_calendar_2 NOT NULL
  4  , calendar_short_name   VARCHAR2(3)    constraint nn_calendar_3 NOT NULL
  5  , start_date            DATE           constraint nn_calendar_4 NOT NULL
  6  , end_date              DATE           constraint nn_calendar_5 NOT NULL
  7  , created_by            NUMBER         constraint nn_calendar_6 NOT NULL
  8  , creation_date         DATE           constraint nn_calendar_7 NOT NULL
  9  , last_updated_by       NUMBER         constraint nn_calendar_8 NOT NULL
 10  , last_update_date      DATE           constraint nn_calendar_9 NOT NULL
 11  , constraint pk_calendar_1 PRIMARY KEY(calendar_id)
 12  , constraint fk_calendar_1 FOREIGN KEY(created_by) references system_user(system_user_id)
 13  , constraint fk_calendar_2 FOREIGN KEY(last_updated_by) references system_user(system_user_id));

Table CALENDAR created.

SQL> 
SQL> CREATE SEQUENCE calendar_s1 START WITH 1;

Error starting at line : 44 in command -
CREATE SEQUENCE calendar_s1 START WITH 1
Error report -
ORA-00955: name is already used by an existing object
00955. 00000 -  "name is already used by an existing object"
*Cause:    
*Action:
SQL> 
SQL> 
SQL> --STEP 2
SQL> 
SQL> INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'January', 'JAN', '01-JAN-2009', '31-JAN-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'February', 'FEB', '01-FEB-2009', '28-FEB-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'March', 'MAR', '01-MAR-2009', '31-MAR-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'April', 'APR', '01-APR-2009', '30-MAR-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'May', 'MAY', '01-MAY-2009', '31-MAY-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'June', 'JUN', '01-JUN-2009', '30-JUN-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL>  INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'July', 'JUL', '01-JUL-2009', '31-JUL-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'August', 'AUG', '01-AUG-2009', '31-AUG-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'September', 'SEP', '01-SEP-2009', '30-SEP-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'October', 'OCT', '01-OCT-2009', '31-OCT-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'November', 'NOV', '01-NOV-2009', '30-NOV-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL> INSERT INTO calendar VALUES
  2  ( calendar_s1.NEXTVAL, 'December', 'DEC', '01-DEC-2009', '31-DEC-2009', 1, SYSDATE, 1, SYSDATE);

1 row inserted.

SQL> 
SQL> -- Query the data insert.
SQL> COL calendar_name        FORMAT A10  HEADING "Calendar|Name"
SQL> COL calendar_short_name  FORMAT A8  HEADING "Calendar|Short|Name"
SQL> COL start_date           FORMAT A9   HEADING "Start|Date"
SQL> COL end_date             FORMAT A9   HEADING "End|Date"
SQL> SELECT   calendar_name
  2  ,        calendar_short_name
  3  ,        start_date
  4  ,        end_date
  5  FROM     calendar;

           Calendar                    
Calendar   Short    Start     End      
Name       Name     Date      Date     
---------- -------- --------- ---------
January    JAN      01-JAN-09 31-JAN-09
February   FEB      01-FEB-09 28-FEB-09
March      MAR      01-MAR-09 31-MAR-09
April      APR      01-APR-09 30-MAR-09
May        MAY      01-MAY-09 31-MAY-09
June       JUN      01-JUN-09 30-JUN-09
July       JUL      01-JUL-09 31-JUL-09
August     AUG      01-AUG-09 31-AUG-09
September  SEP      01-SEP-09 30-SEP-09
October    OCT      01-OCT-09 31-OCT-09
November   NOV      01-NOV-09 30-NOV-09

           Calendar                    
Calendar   Short    Start     End      
Name       Name     Date      Date     
---------- -------- --------- ---------
December   DEC      01-DEC-09 31-DEC-09

12 rows selected. 

SQL> 
SQL> --STEP 3
SQL> 
SQL> @transaction_upload3.sql
SQL> CREATE TABLE transaction_reversal
  2  ( transaction_id           NUMBER
  3  , transaction_account      VARCHAR2(15)
  4  , transaction_type         NUMBER
  5  , transaction_date         DATE
  6  , transaction_amount       NUMBER
  7  , rental_id                NUMBER
  8  , payment_method_type      NUMBER
  9  , payment_account_number   VARCHAR2(19)
 10  , created_by               NUMBER
 11  , creation_date            DATE
 12  , last_updated_by          NUMBER
 13  , last_update_date         DATE
 14  )
 15  
 16  ORGANIZATION EXTERNAL
 17    ( TYPE oracle_loader
 18    DEFAULT DIRECTORY UPLOAD
 19    ACCESS PARAMETERS
 20    ( RECORDS DELIMITED BY NEWLINE CHARACTERSET US7ASCII
 21     BADFILE     'UPLOAD':'transaction_upload3.bad'
 22     DISCARDFILE 'UPLOAD':'transaction_upload3.dis'
 23     LOGFILE     'UPLOAD':'transaction_upload3.log'
 24     FIELDS TERMINATED BY ','
 25     OPTIONALLY ENCLOSED BY "'"
 26     MISSING FIELD VALUES ARE NULL )
 27   LOCATION ('transaction_upload3.csv'))
 28  REJECT LIMIT UNLIMITED;

Table TRANSACTION_REVERSAL created.

SQL> 
SQL> 
SQL> 
SQL> INSERT INTO transaction
  2      SELECT   transaction_s1.NEXTVAL AS transaction_id
  3             , transaction_account
  4             , transaction_type
  5             , transaction_date
  6             , transaction_amount
  7             , rental_id
  8             , payment_method_type
  9             , payment_account_number
 10             , (SELECT   system_user_id
 11                FROM     system_user
 12                WHERE    system_user_name = 'SYSADMIN') AS created_by
 13             , creation_date
 14             , (SELECT   system_user_id
 15                FROM     system_user
 16                WHERE    system_user_name = 'SYSADMIN') AS last_updated_by
 17             , last_update_date
 18       FROM transaction_reversal;

Error starting at line : 102 in command -
INSERT INTO transaction
    SELECT   transaction_s1.NEXTVAL AS transaction_id
           , transaction_account
           , transaction_type
           , transaction_date
           , transaction_amount
           , rental_id
           , payment_method_type
           , payment_account_number
           , (SELECT   system_user_id
              FROM     system_user
              WHERE    system_user_name = 'SYSADMIN') AS created_by
           , creation_date
           , (SELECT   system_user_id
              FROM     system_user
              WHERE    system_user_name = 'SYSADMIN') AS last_updated_by
           , last_update_date
     FROM transaction_reversal
Error report -
ORA-29913: error in executing ODCIEXTTABLEFETCH callout
ORA-02291: integrity constraint (STUDENT.FK_TRANSACTION_2) violated - parent key
not found

SQL> 
SQL> 
SQL> COLUMN "Debit Transactions"  FORMAT A20
SQL> COLUMN "Credit Transactions" FORMAT A20
SQL> COLUMN "All Transactions"    FORMAT A20
SQL> 
SQL> -- Check current contents of the model.
SQL> SELECT 'SELECT record counts' AS "Statement" FROM dual;

Statement           
--------------------
SELECT record counts

1 row selected. 

SQL> SELECT   LPAD(TO_CHAR(c1.transaction_count,'99,999'),19,' ') AS "Debit Transactions"
  2  ,        LPAD(TO_CHAR(c2.transaction_count,'99,999'),19,' ') AS "Credit Transactions"
  3  ,        LPAD(TO_CHAR(c3.transaction_count,'99,999'),19,' ') AS "All Transactions"
  4  FROM    (SELECT COUNT(*) AS transaction_count FROM transaction WHERE transaction_account = '111-111-111-111') c1 CROSS JOIN
  5          (SELECT COUNT(*) AS transaction_count FROM transaction WHERE transaction_account = '222-222-222-222') c2 CROSS JOIN
  6          (SELECT COUNT(*) AS transaction_count FROM transaction) c3;

Debit Transactions  Credit Transactions All Transactions   
------------------- ------------------- -------------------
              2,175                   0               2,175

1 row selected. 

SQL> 
SQL> --STEP 4
SQL> SET LINESIZE 200
SQL> 
SQL> 
SQL> SELECT  il.transaction_account AS TRANSACTION
  2  ,       il.JANUARY
  3  ,       il.FEBRUARY
  4  ,       il.MARCH
  5  ,       il.FQ1
  6  ,       il.APRIL
  7  ,       il.MAY
  8  ,       il.JUNE
  9  ,       il.FQ2
 10  ,       il.JULY
 11  ,       il.AUGUST
 12  ,       il.SEPTEMBER
 13  ,       il.FQ3
 14  ,       il.OCTOBER
 15  ,       il.NOVEMBER
 16  ,       il.DECEMBER
 17  ,       il.FQ4
 18  ,       il.YTD
 19  FROM(
 20  SELECT   CASE
 21             WHEN t.transaction_account = '111-111-111-111' THEN 'Debit'
 22             WHEN t.transaction_account = '222-222-222-222' THEN 'Credit'
 23           END AS "TRANSACTION_ACCOUNT"
 24  ,        CASE
 25             WHEN t.transaction_account = '111-111-111-111' THEN 1
 26             WHEN t.transaction_account = '222-222-222-222' THEN 2
 27           END AS "SORTKEY"
 28  ,        LPAD(TO_CHAR
 29          (SUM(CASE
 30                 WHEN EXTRACT(MONTH FROM transaction_date) = 1 AND
 31                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
 32                   CASE
 33                     WHEN cl.common_lookup_type = 'DEBIT'
 34                     THEN t.transaction_amount
 35                     ELSE t.transaction_amount * -1
 36                   END          
 37               END),'99,999.00'),10,' ') AS "JANUARY"
 38  ,        LPAD(TO_CHAR
 39          (SUM(CASE
 40                WHEN EXTRACT(MONTH FROM transaction_date) = 2 AND
 41                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
 42                   CASE
 43                     WHEN cl.common_lookup_type = 'DEBIT'
 44                     THEN t.transaction_amount
 45                     ELSE t.transaction_amount * -1
 46                   END
 47               END),'99,999.00'),10,' ') AS "FEBRUARY"
 48  ,         LPAD(TO_CHAR
 49           (SUM(CASE
 50                WHEN EXTRACT(MONTH FROM transaction_date) = 3 AND
 51                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
 52                   CASE
 53                     WHEN cl.common_lookup_type = 'DEBIT'
 54                     THEN t.transaction_amount
 55                     ELSE t.transaction_amount * -1
 56                   END
 57               END),'99,999.00'),10,' ') AS "MARCH"
 58  ,         LPAD(TO_CHAR
 59           (SUM(CASE
 60                WHEN EXTRACT(MONTH FROM transaction_date) IN(1,2,3) AND
 61                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
 62                   CASE
 63                     WHEN cl.common_lookup_type = 'DEBIT'
 64                     THEN t.transaction_amount
 65                     ELSE t.transaction_amount * -1
 66                   END
 67               END),'99,999.00'),10,' ') AS "FQ1"
 68  ,         LPAD(TO_CHAR
 69           (SUM(CASE
 70                WHEN EXTRACT(MONTH FROM transaction_date) = 4 AND
 71                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
 72                   CASE
 73                     WHEN cl.common_lookup_type = 'DEBIT'
 74                     THEN t.transaction_amount
 75                     ELSE t.transaction_amount * -1
 76                   END
 77               END),'99,999.00'),10,' ') AS "APRIL"
 78  ,         LPAD(TO_CHAR
 79           (SUM(CASE
 80                WHEN EXTRACT(MONTH FROM transaction_date) = 5 AND
 81                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
 82                   CASE
 83                     WHEN cl.common_lookup_type = 'DEBIT'
 84                     THEN t.transaction_amount
 85                     ELSE t.transaction_amount * -1
 86                   END
 87               END),'99,999.00'),10,' ') AS "MAY"
 88  ,         LPAD(TO_CHAR
 89           (SUM(CASE
 90                WHEN EXTRACT(MONTH FROM transaction_date) = 6 AND
 91                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
 92                   CASE
 93                     WHEN cl.common_lookup_type = 'DEBIT'
 94                     THEN t.transaction_amount
 95                     ELSE t.transaction_amount * -1
 96                   END
 97               END),'99,999.00'),10,' ') AS "JUNE"
 98  ,         LPAD(TO_CHAR
 99           (SUM(CASE
100                WHEN EXTRACT(MONTH FROM transaction_date) IN(4,5,6) AND
101                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
102                   CASE
103                     WHEN cl.common_lookup_type = 'DEBIT'
104                     THEN t.transaction_amount
105                     ELSE t.transaction_amount * -1
106                   END
107               END),'99,999.00'),10,' ') AS "FQ2"             
108  ,         LPAD(TO_CHAR
109           (SUM(CASE
110                WHEN EXTRACT(MONTH FROM transaction_date) = 7 AND
111                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
112                   CASE
113                     WHEN cl.common_lookup_type = 'DEBIT'
114                     THEN t.transaction_amount
115                     ELSE t.transaction_amount * -1
116                   END
117               END),'99,999.00'),10,' ') AS "JULY"
118  ,         LPAD(TO_CHAR
119           (SUM(CASE
120                WHEN EXTRACT(MONTH FROM transaction_date) = 8 AND
121                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
122                   CASE
123                     WHEN cl.common_lookup_type = 'DEBIT'
124                     THEN t.transaction_amount
125                     ELSE t.transaction_amount * -1
126                   END
127               END),'99,999.00'),10,' ') AS "AUGUST"
128  ,         LPAD(TO_CHAR
129           (SUM(CASE
130                WHEN EXTRACT(MONTH FROM transaction_date) = 9 AND
131                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
132                   CASE
133                     WHEN cl.common_lookup_type = 'DEBIT'
134                     THEN t.transaction_amount
135                     ELSE t.transaction_amount * -1
136                   END
137               END),'99,999.00'),10,' ') AS "SEPTEMBER"
138  ,         LPAD(TO_CHAR
139           (SUM(CASE
140                WHEN EXTRACT(MONTH FROM transaction_date) IN(7,8,9) AND
141                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
142                   CASE
143                     WHEN cl.common_lookup_type = 'DEBIT'
144                     THEN t.transaction_amount
145                     ELSE t.transaction_amount * -1
146                   END
147               END),'99,999.00'),10,' ') AS "FQ3"
148  ,         LPAD(TO_CHAR
149           (SUM(CASE
150                WHEN EXTRACT(MONTH FROM transaction_date) = 10 AND
151                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
152                   CASE
153                     WHEN cl.common_lookup_type = 'DEBIT'
154                     THEN t.transaction_amount
155                     ELSE t.transaction_amount * -1
156                   END
157               END),'99,999.00'),10,' ') AS "OCTOBER"
158  ,         LPAD(TO_CHAR
159           (SUM(CASE
160                WHEN EXTRACT(MONTH FROM transaction_date) = 11 AND
161                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
162                   CASE
163                     WHEN cl.common_lookup_type = 'DEBIT'
164                     THEN t.transaction_amount
165                     ELSE t.transaction_amount * -1
166                   END
167               END),'99,999.00'),10,' ') AS "NOVEMBER"
168  ,         LPAD(TO_CHAR
169           (SUM(CASE
170                WHEN EXTRACT(MONTH FROM transaction_date) = 12 AND
171                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
172                   CASE
173                     WHEN cl.common_lookup_type = 'DEBIT'
174                     THEN t.transaction_amount
175                     ELSE t.transaction_amount * -1
176                   END
177               END),'99,999.00'),10,' ') AS "DECEMBER"
178  ,         LPAD(TO_CHAR
179           (SUM(CASE
180                WHEN EXTRACT(MONTH FROM transaction_date) IN(10,11,12) AND
181                      EXTRACT(YEAR FROM transaction_date) = 2009 THEN
182                   CASE
183                     WHEN cl.common_lookup_type = 'DEBIT'
184                     THEN t.transaction_amount
185                     ELSE t.transaction_amount * -1
186                   END
187               END),'99,999.00'),10,' ') AS "FQ4"
188  ,         LPAD(TO_CHAR
189           (SUM(CASE
190                WHEN EXTRACT(YEAR FROM transaction_date) = 2009 THEN
191                   CASE
192                     WHEN cl.common_lookup_type = 'DEBIT'
193                     THEN t.transaction_amount
194                     ELSE t.transaction_amount * -1
195                   END
196               END),'99,999.00'),10,' ') AS "YTD"
197  
198  
199  FROM     transaction t INNER JOIN common_lookup cl
200  ON       t.transaction_type = cl.common_lookup_id 
201  WHERE    cl.common_lookup_table = 'TRANSACTION'
202  AND      cl.common_lookup_column = 'TRANSACTION_TYPE'
203  
204  GROUP BY CASE
205             WHEN t.transaction_account = '111-111-111-111' THEN 'Debit'
206             WHEN t.transaction_account = '222-222-222-222' THEN 'Credit'
207           END 
208  ,        CASE
209             WHEN t.transaction_account = '111-111-111-111' THEN 1
210             WHEN t.transaction_account = '222-222-222-222' THEN 2
211           END
212  
213  ORDER BY SORTKEY) il;

TRANSA JANUARY                                  FEBRUARY                                 MARCH                                    FQ1
------ ---------------------------------------- ---------------------------------------- ---------------------------------------- ----------------------------------------
APRIL                                    MAY                                      JUNE                                     FQ2
---------------------------------------- ---------------------------------------- ---------------------------------------- ----------------------------------------
JULY                                     AUGUST                                   SEPTEMBER                                FQ3
---------------------------------------- ---------------------------------------- ---------------------------------------- ----------------------------------------
OCTOBER                                  NOVEMBER                                 DECEMBER                                 FQ4
---------------------------------------- ---------------------------------------- ---------------------------------------- ----------------------------------------
YTD                                     
----------------------------------------
Debit    1,179.00                                 1,875.00                                 2,379.00                                 5,433.00                               
2,157.00                                 978.00                                   534.00                                   3,669.00                                 
1,050.00                                 993.00                                   969.00                                   3,012.00                                 
1,434.00                                 1,380.00                                 1,035.00                                 3,849.00                                 
15,963.00                               

1 row selected. 

SQL> 
SQL> SPOOL OFF
